{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sai kiran\\\\Desktop\\\\Interview Trails\\\\GitHub_Projects\\\\Coffee_planner\\\\src\\\\components\\\\CoffeePlanner\\\\index.js\";\nimport { Component } from \"react\";\nimport CoffeePlannerQuestion from \"../CoffeePlannerQuestion\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CoffeePlanner extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedCoffeePlan: [\"\", \"\", \"\", \"\", \"\"],\n      showSummary: false\n    };\n\n    this.setShowSummary = value => {\n      this.setState({\n        showSummary: value\n      });\n    };\n\n    this.isAllOptionsSelected = () => {\n      const {\n        selectedCoffeePlan\n      } = this.state;\n      return selectedCoffeePlan.filter(plan => plan === \"\").length === 0;\n    };\n\n    this.renderSummarySection = () => {\n      const {\n        selectedCoffeePlan,\n        showSummary\n      } = this.state;\n      console.log(this.state.selectedCoffeePlan);\n\n      if (showSummary) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-container\",\n          children: this.isAllOptionsSelected() ? /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"summary\",\n            children: [\"I Drink my coffee as\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"selected-value\",\n              children: [\" \", selectedCoffeePlan[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), \", with a\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"selected-value\",\n              children: [\" \", selectedCoffeePlan[1], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this), \"type of bean.\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"selected-value\",\n              children: [\" \", selectedCoffeePlan[2], \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), \"ground ala\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"selected-value\",\n              children: [\" \", selectedCoffeePlan[3]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), \", sent to me\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"selected-value\",\n              children: [\" \", selectedCoffeePlan[4]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"summary\",\n            children: \"Kindly select options for all the questions.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this);\n      }\n\n      return null;\n    };\n\n    this.updateSelectedCoffeePlan = (questionType, selectedOption) => {\n      const {\n        coffeePlannerData\n      } = this.props;\n      const {\n        selectedCoffeePlan\n      } = this.state;\n      const questionIndex = coffeePlannerData.findIndex(coffeePlan => questionType === coffeePlan.questionType);\n      const newSelectedCoffeePlan = [...selectedCoffeePlan];\n      newSelectedCoffeePlan[questionIndex] = selectedOption;\n      this.setState({\n        selectedCoffeePlan: [...newSelectedCoffeePlan]\n      });\n      this.setShowSummary(false);\n    };\n\n    this.getSelectedOption = questionType => {\n      const {\n        coffeePlannerData\n      } = this.props;\n      const {\n        selectedCoffeePlan\n      } = this.state;\n      const questionIndex = coffeePlannerData.findIndex(coffeeQuestion => questionType === coffeeQuestion.questionType);\n      return selectedCoffeePlan[questionIndex];\n    };\n\n    this.renderCoffeePlannerQuestions = () => {\n      const {\n        coffeePlannerData\n      } = this.props;\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"coffee-planner-questions-list\",\n        children: coffeePlannerData.map(coffeeQuestion => /*#__PURE__*/_jsxDEV(CoffeePlannerQuestion, {\n          getSelectedOption: this.getSelectedOption,\n          questionData: coffeeQuestion,\n          updateSelectedCoffeePlan: this.updateSelectedCoffeePlan\n        }, coffeeQuestion.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.onClickCreateMyPlan = () => {\n      this.setShowSummary(true);\n    };\n\n    this.renderBodySection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coffee-planner-body\",\n      children: [this.renderCoffeePlannerQuestions(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"create-my-plan-button\",\n          onClick: this.onClickCreateMyPlan,\n          children: \"Create my plan!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), this.renderSummarySection()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }, this);\n\n    this.renderHeaderSection = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"coffee-planner-details-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"heading\",\n          children: \"Create a Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"description\",\n          children: \"We offer an assortment of the best artesian coffees from the globe delivered fresh to the door create your plan with this\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: [this.renderHeaderSection(), this.renderBodySection()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CoffeePlanner;","map":{"version":3,"sources":["C:/Users/sai kiran/Desktop/Interview Trails/GitHub_Projects/Coffee_planner/src/components/CoffeePlanner/index.js"],"names":["Component","CoffeePlannerQuestion","CoffeePlanner","state","selectedCoffeePlan","showSummary","setShowSummary","value","setState","isAllOptionsSelected","filter","plan","length","renderSummarySection","console","log","updateSelectedCoffeePlan","questionType","selectedOption","coffeePlannerData","props","questionIndex","findIndex","coffeePlan","newSelectedCoffeePlan","getSelectedOption","coffeeQuestion","renderCoffeePlannerQuestions","map","id","onClickCreateMyPlan","renderBodySection","renderHeaderSection","render"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AAEA,OAAOC,qBAAP,MAAkC,0BAAlC;AAEA,OAAO,aAAP;;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCG,KADoC,GAC5B;AACNC,MAAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CADd;AAENC,MAAAA,WAAW,EAAE;AAFP,KAD4B;;AAAA,SAMpCC,cANoC,GAMlBC,KAAD,IAAW;AAC1B,WAAKC,QAAL,CAAc;AAAEH,QAAAA,WAAW,EAAEE;AAAf,OAAd;AACD,KARmC;;AAAA,SAUpCE,oBAVoC,GAUb,MAAM;AAC3B,YAAM;AAAEL,QAAAA;AAAF,UAAyB,KAAKD,KAApC;AAEA,aAAOC,kBAAkB,CAACM,MAAnB,CAA2BC,IAAD,IAAUA,IAAI,KAAK,EAA7C,EAAiDC,MAAjD,KAA4D,CAAnE;AACD,KAdmC;;AAAA,SAgBpCC,oBAhBoC,GAgBb,MAAM;AAC3B,YAAM;AAAET,QAAAA,kBAAF;AAAsBC,QAAAA;AAAtB,UAAsC,KAAKF,KAAjD;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAL,CAAWC,kBAAvB;;AACA,UAAIC,WAAJ,EAAiB;AACf,4BACE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBACG,KAAKI,oBAAL,kBACC;AAAG,YAAA,SAAS,EAAC,SAAb;AAAA,4DAEE;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,8BAAmCL,kBAAkB,CAAC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,2BAIE;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,8BAAmCA,kBAAkB,CAAC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,gCAME;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,8BAAmCA,kBAAkB,CAAC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF,6BAQE;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,8BAAmCA,kBAAkB,CAAC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,+BAUE;AAAM,cAAA,SAAS,EAAC,gBAAhB;AAAA,8BAAmCA,kBAAkB,CAAC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,gBAcC;AAAG,YAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAfJ;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBD;;AACD,aAAO,IAAP;AACD,KA5CmC;;AAAA,SA8CpCY,wBA9CoC,GA8CT,CAACC,YAAD,EAAeC,cAAf,KAAkC;AAC3D,YAAM;AAAEC,QAAAA;AAAF,UAAwB,KAAKC,KAAnC;AACA,YAAM;AAAEhB,QAAAA;AAAF,UAAyB,KAAKD,KAApC;AACA,YAAMkB,aAAa,GAAGF,iBAAiB,CAACG,SAAlB,CACnBC,UAAD,IAAgBN,YAAY,KAAKM,UAAU,CAACN,YADxB,CAAtB;AAGA,YAAMO,qBAAqB,GAAG,CAAC,GAAGpB,kBAAJ,CAA9B;AACAoB,MAAAA,qBAAqB,CAACH,aAAD,CAArB,GAAuCH,cAAvC;AACA,WAAKV,QAAL,CAAc;AAAEJ,QAAAA,kBAAkB,EAAE,CAAC,GAAGoB,qBAAJ;AAAtB,OAAd;AACA,WAAKlB,cAAL,CAAoB,KAApB;AACD,KAxDmC;;AAAA,SA0DpCmB,iBA1DoC,GA0DfR,YAAD,IAAkB;AACpC,YAAM;AAAEE,QAAAA;AAAF,UAAwB,KAAKC,KAAnC;AACA,YAAM;AAAEhB,QAAAA;AAAF,UAAyB,KAAKD,KAApC;AACA,YAAMkB,aAAa,GAAGF,iBAAiB,CAACG,SAAlB,CACnBI,cAAD,IAAoBT,YAAY,KAAKS,cAAc,CAACT,YADhC,CAAtB;AAGA,aAAOb,kBAAkB,CAACiB,aAAD,CAAzB;AACD,KAjEmC;;AAAA,SAmEpCM,4BAnEoC,GAmEL,MAAM;AACnC,YAAM;AAAER,QAAAA;AAAF,UAAwB,KAAKC,KAAnC;AAEA,0BACE;AAAI,QAAA,SAAS,EAAC,+BAAd;AAAA,kBACGD,iBAAiB,CAACS,GAAlB,CAAuBF,cAAD,iBACrB,QAAC,qBAAD;AACE,UAAA,iBAAiB,EAAE,KAAKD,iBAD1B;AAGE,UAAA,YAAY,EAAEC,cAHhB;AAIE,UAAA,wBAAwB,EAAE,KAAKV;AAJjC,WAEOU,cAAc,CAACG,EAFtB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF;AAYD,KAlFmC;;AAAA,SAoFpCC,mBApFoC,GAoFd,MAAM;AAC1B,WAAKxB,cAAL,CAAoB,IAApB;AACD,KAtFmC;;AAAA,SAwFpCyB,iBAxFoC,GAwFhB,mBAClB;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,iBACG,KAAKJ,4BAAL,EADH,eAEE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,uBAFZ;AAGE,UAAA,OAAO,EAAE,KAAKG,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,EAWG,KAAKjB,oBAAL,EAXH;AAAA;AAAA;AAAA;AAAA;AAAA,YAzFkC;;AAAA,SAwGpCmB,mBAxGoC,GAwGd,mBACpB;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAzGkC;AAAA;;AAoHpCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,iBACG,KAAKD,mBAAL,EADH,EAEG,KAAKD,iBAAL,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AA3HmC;;AA8HtC,eAAe7B,aAAf","sourcesContent":["import { Component } from \"react\";\r\n\r\nimport CoffeePlannerQuestion from \"../CoffeePlannerQuestion\";\r\n\r\nimport \"./index.css\";\r\n\r\nclass CoffeePlanner extends Component {\r\n  state = {\r\n    selectedCoffeePlan: [\"\", \"\", \"\", \"\", \"\"],\r\n    showSummary: false,\r\n  };\r\n\r\n  setShowSummary = (value) => {\r\n    this.setState({ showSummary: value });\r\n  };\r\n\r\n  isAllOptionsSelected = () => {\r\n    const { selectedCoffeePlan } = this.state;\r\n\r\n    return selectedCoffeePlan.filter((plan) => plan === \"\").length === 0;\r\n  };\r\n\r\n  renderSummarySection = () => {\r\n    const { selectedCoffeePlan, showSummary } = this.state;\r\n    console.log(this.state.selectedCoffeePlan);\r\n    if (showSummary) {\r\n      return (\r\n        <div className='summary-container'>\r\n          {this.isAllOptionsSelected() ? (\r\n            <p className='summary'>\r\n              I Drink my coffee as\r\n              <span className='selected-value'> {selectedCoffeePlan[0]}</span>,\r\n              with a\r\n              <span className='selected-value'> {selectedCoffeePlan[1]} </span>\r\n              type of bean.\r\n              <span className='selected-value'> {selectedCoffeePlan[2]} </span>\r\n              ground ala\r\n              <span className='selected-value'> {selectedCoffeePlan[3]}</span>,\r\n              sent to me\r\n              <span className='selected-value'> {selectedCoffeePlan[4]}</span>.\r\n            </p>\r\n          ) : (\r\n            <p className='summary'>\r\n              Kindly select options for all the questions.\r\n            </p>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  updateSelectedCoffeePlan = (questionType, selectedOption) => {\r\n    const { coffeePlannerData } = this.props;\r\n    const { selectedCoffeePlan } = this.state;\r\n    const questionIndex = coffeePlannerData.findIndex(\r\n      (coffeePlan) => questionType === coffeePlan.questionType\r\n    );\r\n    const newSelectedCoffeePlan = [...selectedCoffeePlan];\r\n    newSelectedCoffeePlan[questionIndex] = selectedOption;\r\n    this.setState({ selectedCoffeePlan: [...newSelectedCoffeePlan] });\r\n    this.setShowSummary(false);\r\n  };\r\n\r\n  getSelectedOption = (questionType) => {\r\n    const { coffeePlannerData } = this.props;\r\n    const { selectedCoffeePlan } = this.state;\r\n    const questionIndex = coffeePlannerData.findIndex(\r\n      (coffeeQuestion) => questionType === coffeeQuestion.questionType\r\n    );\r\n    return selectedCoffeePlan[questionIndex];\r\n  };\r\n\r\n  renderCoffeePlannerQuestions = () => {\r\n    const { coffeePlannerData } = this.props;\r\n\r\n    return (\r\n      <ul className='coffee-planner-questions-list'>\r\n        {coffeePlannerData.map((coffeeQuestion) => (\r\n          <CoffeePlannerQuestion\r\n            getSelectedOption={this.getSelectedOption}\r\n            key={coffeeQuestion.id}\r\n            questionData={coffeeQuestion}\r\n            updateSelectedCoffeePlan={this.updateSelectedCoffeePlan}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  onClickCreateMyPlan = () => {\r\n    this.setShowSummary(true);\r\n  };\r\n\r\n  renderBodySection = () => (\r\n    <div className='coffee-planner-body'>\r\n      {this.renderCoffeePlannerQuestions()}\r\n      <div className='button-container'>\r\n        <button\r\n          type='button'\r\n          className='create-my-plan-button'\r\n          onClick={this.onClickCreateMyPlan}\r\n        >\r\n          Create my plan!\r\n        </button>\r\n      </div>\r\n      {this.renderSummarySection()}\r\n    </div>\r\n  );\r\n\r\n  renderHeaderSection = () => (\r\n    <div className='header-section'>\r\n      <div className='coffee-planner-details-container'>\r\n        <h1 className='heading'>Create a Plan</h1>\r\n        <p className='description'>\r\n          We offer an assortment of the best artesian coffees from the globe\r\n          delivered fresh to the door create your plan with this\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <div className='app-container'>\r\n        {this.renderHeaderSection()}\r\n        {this.renderBodySection()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CoffeePlanner;\r\n"]},"metadata":{},"sourceType":"module"}